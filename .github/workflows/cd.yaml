name: CD-Pipeline

on:
  workflow_dispatch:
    inputs:
      ci_run_id:
        required: true

jobs:
  test:
    runs-on: ubuntu-latest
    environment: main
    # env:
    #   TF_HOME: terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download the Terraform Artifact
        uses: actions/download-artifact@v4.3.0
        with:
          name: terraformCode
          path: terraformCode
          run-id: ${{ github.event.inputs.ci_run_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          cli_config_credentials_token: ${{ secrets.TERRAFORMTOKEN }}
          
      # - name: terraform init
      #   run: |
      #     cd ${{ github.workspace }}/terraformCode
      #     export TF_WORKSPACE="dev"
      #     terraform init
      #     terraform plan -var-file=variables/dev.tfvars
      #     terraform apply -auto-approve -var-file=variables/dev.tfvars

      - name: Azure Login
        uses: Azure/login@v2.3.0
        with:
          creds: ${{ secrets.ARM_CLIENT_SECRET }}
          # ClientId of the Azure Service principal created.
          client-id: ${{ secrets.ARM_CLIENT_SECRET }}
          # TenantId of the Azure Service principal created.
          tenant-id: ${{ secrets.ARM_CLIENT_SECRET }}
          # Azure subscriptionId
          subscription-id: ${{ secrets.ARM_CLIENT_SECRET }}

      - name: Azure CLI Action
        uses: Azure/cli@v2.1.0
        with:
          inlineScript: |
            az webapp config container set --name dev-app-harirg-westus2 --resource-group dev-rg-harirg-westus2 --container-image-name gantahari/pygoatghaimage:15829659409
          
          
      


  prod:
    runs-on: ubuntu-latest
    environment: main
    # env:
    #   TF_HOME: terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download the Terraform Artifact
        uses: actions/download-artifact@v4.3.0
        with:
          name: terraformCode
          path: terraformCode
          run-id: ${{ github.event.inputs.ci_run_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          cli_config_credentials_token: ${{ secrets.TERRAFORMTOKEN }}
          
      # - name: terraform init
      #   run: |
      #     cd ${{ github.workspace }}/terraformCode
      #     export TF_WORKSPACE="prod"
      #     terraform init
      #     terraform plan -var-file=variables/prod.tfvars
      #     terraform apply -auto-approve -var-file=variables/prod.tfvars
      
      - name: Azure Login
        uses: Azure/login@v2.3.0
        with:
          creds: ${{ secrets.ARM_CLIENT_SECRET }}
          # ClientId of the Azure Service principal created.
          client-id: ${{ secrets.ARM_CLIENT_SECRET }}
          # TenantId of the Azure Service principal created.
          tenant-id: ${{ secrets.ARM_CLIENT_SECRET }}
          # Azure subscriptionId
          subscription-id: ${{ secrets.ARM_CLIENT_SECRET }}

      - name: Azure CLI Action
        uses: Azure/cli@v2.1.0
        with:
          inlineScript: |
            az webapp config container set --name dev-app-harirg-westus2 --resource-group dev-rg-harirg-westus2 --container-image-name gantahari/pygoatghaimage:15829659409
          
