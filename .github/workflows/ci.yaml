name: CI Pipeline

on:
  push:
    branches:
    - master
jobs:
  SonarQube:
    if: false
    environment: main
    runs-on : ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}  
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_IMAGENAME:  "pygoatghaimage"
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGENAME }}:${{ github.run_id }}

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=gantahari
            -Dsonar.projectKey=gantahari_pygoat
            
          
  DockerScout:
    if: false
    environment: main
    runs-on : ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}  
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_IMAGENAME:  "pygoatghaimage"
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGENAME }}:${{ github.run_id }}

      - name: Analyze for critical and high CVEs
        uses: docker/scout-action@v1
        with:
          command: cves
          image: ${{ steps.meta.outputs.tags }}
          sarif-file: sarif.output.json
          summary: true

      - name: Upload SARIF result
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: sarif.output.json

  trivy:
    if: false
    environment: main
    runs-on : ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}  
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_IMAGENAME:  "pygoatghaimage"
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: terraformCode
          path: automation/iac/terraform    
          retention-days: 7
          overwrite: true

      - name: running trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-ref: './automation/iac/terraform'
          scan-type: 'fs'
          scanners: 'config'
          hide-progress: false
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '0'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
          trivy-config: trivy.yaml

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  deploy:
    runs-on : ubuntu-latest
    steps:
      - name: terraform init and apply
        run: |
          cd ./automation/iac/terraform
          ls -ltr
          terraform init
          terraform apply -auto-approve
